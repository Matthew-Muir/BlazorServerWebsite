@page "/flex"
@inject ILogger<Counter> logger
<PageTitle>Flex Box Demo</PageTitle>


<div class="d-flex flex-column align-items-center">
    <div class="d-flex flex-row justify-content-evenly" style="width:63%;">
        <label class="bg-info">Justify</label>
        <label class="bg-info">Align</label>
    </div>
    <div class="d-flex flex-row justify-content-end" style="margin-bottom:20px; width:63%">
        <select @onchange=@(args => UpdateJustify("one",args)) class="form-select">
            <option value="">None</option>
            <option value="start">Start</option>
            <option value="center">Center</option>
            <option value="end">End</option>
            <option value="between">Between</option>
            <option value="around">Around</option>
        </select>

        <select class="form-select" @onchange=@(args => UpdateJustify("two",args))>
            <option value="">None</option>
            <option value="start">Start</option>
            <option value="center">Center</option>
            <option value="end">End</option>
        </select>
    </div>


    <div style="background-color:lightcyan; height:400px; width:400px;" class="d-flex @justifyClasses @alignClasses">
        <div class="p-2 redBox"></div>
        <div class="p-2 greenBox"></div>
        <div class="p-2 blueBox"></div>
    </div>
</div>


@code {
    private string justifyClasses = "";
    private string alignClasses = "";
    void UpdateJustify(string selection, ChangeEventArgs e)
    {
        if (selection == "one")
        {
            switch (e?.Value?.ToString())
            {
                case "start":
                    justifyClasses = "justify-content-start";
                    break;
                case "center":
                    justifyClasses = "justify-content-center";
                    break;
                case "end":
                    justifyClasses = "justify-content-end";
                    break;
                case "between":
                    justifyClasses = "justify-content-between";
                    break;
                case "around":
                    justifyClasses = "justify-content-around";
                    break;
                default:
                    justifyClasses = "";
                    break;
            }
        }
        else
        {
            switch (e?.Value?.ToString())
            {
                case "start":
                    alignClasses = "align-items-start";
                    break;
                case "center":
                    alignClasses = "align-items-center";
                    break;
                case "end":
                    alignClasses = "align-items-end";
                    break;
                default:
                    alignClasses = "";
                    break;
            }
        }

    }
}
