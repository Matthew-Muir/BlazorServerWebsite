@page "/sandbox"

@using Microsoft.Extensions.Logging
@inject ILogger<Counter> logger
@inject IJSRuntime JS

<div class="card d-flex flex-column">
    <div class="card-title">
        <strong>Kitty Card</strong>
    </div>
    <div class="image align-self-center">
        <img src="https://images.unsplash.com/photo-1519052537078-e6302a4968d4?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80" />
    </div>
</div>

<button type="button" class="btn btn-primary">Open <span style="padding-left:5px;" class="bi-upload"></span></button>

<InputFile OnChange="OnInputFileChanged" class="form-control-file" accept=".txt"></InputFile>
<h1>@_txt</h1>
<button @onclick="UpdatePage" class="btn btn-primary" type="button">Update</button>

<br />
<hr />

<InputFile OnChange="ResizeAndDisplayImageUsingStreaming" />
<img id="showImageHere" />
<button @onclick="UpdatePage" class="btn btn-primary" type="button">Update</button>

@code {
     private async Task ResizeAndDisplayImageUsingStreaming(InputFileChangeEventArgs e)
        {
            var imageFile = e.File;
            var resizedImage =
                await imageFile.RequestImageFileAsync("image/jpg", 250, 250);
            var jsImageStream = resizedImage.OpenReadStream();
            var dotnetImageStream = new DotNetStreamReference(jsImageStream);
            await JSRuntime.InvokeVoidAsync("setImageUsingStreaming",
                "showImageHere", dotnetImageStream);
        }

//LEFT OFF HERE... Try and figure out how to put all JS Methods into a single file rather than script tag in _Layout
}
